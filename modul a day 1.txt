MODUL A DAY 1

- NETWORK INFRASTRUCTURE
	- Configure ip address network devices (cisco):
		#en -> untuk enable cisco
		#conf t -> untuk configurasi terminal
		#int gig1 -> memilih interface yang akan di konfig contoh gigabit 1
		#ip add 10.10.10.1 255.255.255.0 -> menambahkan alamat ip dan netmask
	- Create SSH user (cisco)
		- untuk tambahan password untuk enable:
			#en
			#conf t
			#host cisco1 -> membuat hostname jadi cisco1(terserah untuk nama)
			#ip domain name cisco1 -> membuat domain dengan nama cisco1(terserah untuk nama)
			#username user1 pass user1 -> membuat user dengan nama user1 dan password user1
			#crypto key gen rsa(enter, lalu ketik 2048 jika ada pertanyaan)
			#line vty 0 4 -> untuk mengkonfigurasi virtual terminal, 0 4 maksudnya yang dapat masuk virtual terminal hanya 5 orang, 0 1 2 3 4
			#transport input ssh -> untuk mengaktifkan ssh di virtual terminal
			#login local -> login dengan user local
			#ex -> untuk kembali
			#enable secret Skills39 -> agar setelah user login menggunakan ssh dapat meng-enable dan mengonfigurasi cisco karena yang dibuat hanya user biasa
		- untuk user super agar tidak perlu password enable:
			#username usersu pass usersu -> membuat user dengan nama usersu dan password usersu
			#username usersu privilege 15 -> membuat privilege tertinggi untuk user dengan nama usersu sehingga dapat langsung mengkonfigurasi cisco tanpa password enable
		- merubah port default ssh:
			#ip ssh port 8080 rotary 1 -> membuka port 8080 untuk ssh dan rotary group 1 untuk dipasangkan di virtual terminal
			#line vty 0 15 -> untuk mengonfigurasi virtual terminal
			#rotary 1 -> memasang rotary 1 yang berisi port ssh
			#ip access_list extended portsshdefault -> memberikan access list yang diberi nama portsshdefault(nama boleh terserah)
			#deny tcp any any eq 22 -> untuk deny(menolak) permintaan dari port 22
			#permit ip any any -> untuk mengizinkan semua ip agar dapat mengakses, perintah ini harus di akhir,kenapa? karena cisco mengeksekusi perintah dari atas ke bawah, jadi perintah tadi memerintahkan agar cisco menolak permintaan port 22, lalu mengizinkan semua ip mengakses kalau tidak diberikan ini nanti semua ip ditolak untuk mengakses semua port
			#line vty 0 15
			#access-class portsshdefault in -> memasang access list dengan nama portsshdefault dengan perintah in, maksudnya acl(access list) akan dieksekusi ketika ada permintaan masuk(inbound)
		- jika tidak bisa remote ssh di debian, lakukan ini di debian:
			#nano ~/.ssh/config
			tambahkan di bawah:
			Host 123.123.123.123->ip cisco
			    KexAlgorithms +diffie-hellman-group1-sha1
			simpan dan keluar lalu restart ssh.
	- Configure Dynamic Routing Border Gateway Protocol(BGP):
		-Cisco1:
			#router bgp 1 -> untuk mengaktifkan bgp dengan autonomous number 1
			#neighbor 10.10.10.2 remote-as 2 -> mendaftarkan alamat ip interface yang terhubung langsung ke cisco1 (misal cisco2) yang di set "router bgp 2"
			#network 172.17.1.0 mask 255.255.255.0 -> mengadvertize network yang ada di interface cisco1(tambahkan lagi jika lebih dari 1 network, ingat network bukan alamat ip interfacenya)
		-Cisco2:
			#router bgp 2
			#neighbor 10.10.10.1 remote-as 1
			#network 192.168.1.0 mask 255.255.255.0 -> jadi kedua router akan bertukan informasi network yang mereka punya
	- Enable port NAT:
		-NAT Static:
			#ip nat inside source static 192.168.1.1 30.10.10.1 -> akan membuat static nat dari ip private 192.168.1.1 jadi ip public 30.10.10.1
			#int gi0/0
			#ip nat outside -> mengarah ke jaringan luar/public
			#int gi0/1
			#ip nat inside -> mengarah ke local alias ip address private
			jadi seakan akan yang terlihat di jaringan public atau internet adalah ip 30.10.10.1 atau ip public sedangkan yang end devices/pc memiliki ip local
		-NAT Dynamic:
			#ip nat pool whypool 30.30.30.1 30.30.30.20 net 255.255.255.0 -> membuat list ip public yang akan di nat
			#ip nat inside source list 1 pool whypool -> membuat nat yang berisi ip di pool whypool
			#access-list 1 permit 192.168.10.0 0.0.0.255 -> membuat access-list untuk permit(mengizinkan) ip local tersebut untuk di nat.
			jadi ketika ada client yang terhubung ke router otomatis akan diberi nat ip public sesuai yang ada di list.
		-NAT Overload:
			#access-list 1 permit any -> membuat access list untuk mengizinkan semua ip, jika untuk spesifik any dapat diganti dengan network ip dan wildcard
			#ip nat inside source list 1 interface fa0/1 overload -> membuat nat yang ada di access list 1 yang sudah di buat agar di nat secara overload di interface fa0/1, jadi 1 ip public dapat digunakan banyak ip private
			#int fa0/0
			#ip nat inside
			#int fa0/1
			#ip nat outside
	- Enable vpn secure with encrypted, misal R1 memiliki ip public 1.1.1.1 di interface fa0/1 dan R2 memiliki ip public 1.1.1.2 di interface fa0/1
	  dan lokal ip R1 adalah 10.10.10.0/24 dan lokal ip R2 adalah 20.20.20.0/24, berikut script untuk membuat vpn dengan enkripsi:
		-isakmp policy (R1):
			#crypto isakmp policy 1
			#encr 3des
			#hash md5
			#authentication pre-share
			#group 2
			#lifetime 86400
		-membuat pre shared key untuk auth (R1):
			#crypto isakmp key whykey address 1.1.1.2 -> diisi dengan ip peer nya yaitu ip R2
		-konfigurasi ipsec:
			-buat acl extended(R1):
				#ip access-list extended VPN-TRAFIC
				#permit ip 10.10.10.0 0.0.0.255 20.20.20.0 0.0.0.255
			-buat ipsec transform(R1):
				#crypto ipsec transform-set TS esp-3des esp-md5-hmac
			-buat crypto map(R1):
				#crypto map CMAP 10 ipsec-isakmp
				#set peer 1.1.1.2
				#set transform-set TS
				#match address VPN-TRAFIC
			-aktifkan crypto map ke interface public(R1):
				#int fa0/1
				#crypto map CMAP
		-untuk R2 samakan seperti di atas, lebih jelasnya di bawah ini(R2):
			#crypto isakmp policy 1
			#encr 3des
			#hash md5
			#authectication pre-share
			#group 2
			#lifetime 86400
			
			#crypto isakmp key whykey address 1.1.1.1 -> ip R1
			#ip access-list extended VPN-TRAFIC
			#permit ip 20.20.20.0 0.0.0.255 10.10.10.0 0.0.0.255 -> bisa dilihat perbedaannya sama di atas
			
			#crypto ipsec transform-set TS esp-3des esp-md5-hmac
			#crypto map CMAP 10 ipsec-isakmp
			#set peer 1.1.1.1
			#set transform-set TS
			#match address VPN-TRAFIC
			
			#int fa0/1
			#crypto map CMAP

		-lalu buat nat(R1):
			#ip nat inside source list 100 int fa0/1 overload
			#access-list 100 remark "NAT Service"
			#access-list 100 deny ip 10.10.10.0 0.0.0.255 20.20.20.0 0.0.0.255
			#access-list 100 permit ip 10.10.10.0 0.0.0.255 any
			#access-list 100 remark
		-nat (R2):
			#ip nat inside source list 100 int fa0/1 overload
			#access-list 100 remark "NAT Service"
			#access-list 100 deny ip 20.20.20.0 0.0.0.255 10.10.10.0 0.0.0.255
			#access-list 100 permit ip 20.20.20.0 0.0.0.255 any
			#access-list 100 remark
		-cara cek:
			#sh cry session
	- Configure vlan:
		#vlan 10 -> mengaktifkan vlan 10
		#name management -> memberi nama vlan 10 dengan nama management(nama terserah)
		#int range gig0/1-3 -> untuk mengonfigurasi beberapa interface secara bersamaan
		#switchport mode access -> mengaktifkan fungsi switchport di interface
		#switchport access vlan 10 -> memasukkan interface kedalam vlan
	- Configure trunk vlan:
		#int gig0/4 -> untuk masuk ke interface yang akan dijadikan trunk
		#switchport mode trunk
	- configure subinterface:
		#int gi0/0
		#no sh
		#int gi0/0.10
		#encapsulation dot1q 10 -> membuat sub interface vlan 10
		#ip add 192.168.10.1 255.255.255.0
		#int gi0/0.20
		#encapsulation dot1q 20 -> membuat subinterface vlan 20
		#ip add 192.168.20.1 255.255.255.0
		jadi dapat membuat 2 ip address dalam 1 interface yang terhubung ke port trunk vlan.
- LINUX SERVICES
	- Configure ip address(static):
		#nano /etc/network/interfaces
		#tambahkan paling bawah: auto ens33(nama interface)
						 iface ens33 inet static
						 	address 192.168.1.10
							netmask 255.255.255.0
		#lalu simpan
		#/etc/init.d/networking restart
	- Create SSH user:
		#adduser user1
	- Create SSH server:
		#apt-get install ssh
		#nano /etc/ssh/sshd_config
		#cari tulisan port 22 lalu hapus tanda pagar
		#caritulisan prohibit password lalu hapus tanda pagar dan prohibit-password ganti dengan yes
		#/etc/init.d/ssh restart
	- Configure nat:
		#iptables -t nat -A POSTROUTING -o ens33 -j MASQUERADE
	- Configure DNS SERVER:
		- install package dns server:
			#apt-get install bind9
		- Create A, NS, record for srv1, srv2, ca
			di db.sabang tambahkan paling bawah
			#	IN	NS	ns1.sabang.net.
			#	IN	NS	ns2.sabang.net.
			#ns1.sabang.net.	IN	A	ipsrv1
			#ns2.sabang.net.	IN	A	ipsrv2
			#srv1.sabang.net.	IN	A	ipsrv1
			#srv2.sabang.net.	IN	A	ipsrv2
			#www.sabang.net.	IN	A	ipfw
			
			di db.indonesia tambahkan paling bawah
			#	IN	NS	ns1.sabang.net.
			#	IN	NS	ns2.sabang.net.
			#ns1.sabang.net.	IN	A	ipsrv1
			#ns2.sabang.net.	IN	A	ipsrv2
			#ca.indonesia.com.	IN	A	ipca
			#cert.indonesia.com.	IN	A	ipca
			
			membuat 100 subdomain dengan for loop bash programming
			#nano seratussubdo.sh
			#for ((i=0; i<100; i++))
			#do
			#echo -r -e "user00$i.public.sabang.net.\tIN\tA\tipfw" >> /etc/bind/db.sabang
			#done
			simpan dan keluar
			jalankan
			#bash seratussubdo.sh
	
	- Configure Web Hosting
		- install apache & curl:
			#apt-get install apache2 curl
			menggunakan curl untuk tes web server yang digunakan, contoh:
			#curl -I ipsrv1/ipsrv2
		- Create default page in /var/www/index.html:
			#nano /var/www/index.html
			isikan berikut
				<h1> Default Page </h1><br>
				<br>
				This page has not been modified by the owners.
		- Create 100 page for user specified:
			buat 100 folder untuk user di /var/www/
			#nano seratusfolder.sh
			#for ((i=0;i<100;i++))
			#do
			#mkdir /var/www/user$i
			#done
			buat file html untuk 100 user
			#nano seratushtml.sh
			tambahkan ini
			#for ((i=0;i<100;i++))
			#do
			#echo -r -e "<h1> Default Page for user$i </h1><br>\n<br>\This page has not been modified by the user." >> /var/www/user$i/index.html
			#done
			simpan dan keluar, lalu jalankan
			#bash seratushtml.sh
		- Create vhost www.sabang.net for serv /var/www/index.html
			#nano /etc/apache2/sites-available/www.conf
			tambahkan ini
			#<VirtualHost *:80>
			#    ServerName www.sabang.net
			#    DocumentRoot /var/www/
			#</VirtualHost>
			simpan dan keluar
			#a2ensite www.conf -> untuk mengaktifkan vhost
		- Create 100 vhost for serv /var/www/user1-100:
			#nano seratusvhost.sh
			#for ((i=0;i<100;i++))
			#do
			#echo -r -e "<VirtualHost *:80>\n\tServerName user$i.public.sabang.net\n\tDocumentRoot /var/www/user$i/\n</VirtualHost>" >> /etc/apache2/sites-available/user$i.conf
			#done
			simpan dan keluar, jalankan
			#bash seratusvhost.sh
			#nano enablevhost.sh
			tambahkan
			#for ((i=0;i<100<i++))
			#do 
			#a2ensite user$i.conf
			#done
			simpan keluar jalankan
			#bash enablevhost.sh
	- Configure load balance:
		- install haproxy:
			#apt-get install haproxy
		- configure haproxy:
			#nano /etc/haproxy/haproxy.cfg
			tambahkan dib awah
			#listen stats			->	konfigurasi stats/status load balance
			#	bind *:80 			->	menggunakan port 80
			#	stats enable		->	mengaktifkan stats/status load balance(defaultnya disable)
			#	stats auth root:Skills39->	memberi auth user:pass untuk yang ingin melihat status load balance
			#	stats uri /stats		->	jadi untuk melihat stats lb(loadbalance) ketikan ipaddress/stats /stats bisa diubah sesuka hati
		- configure backend sabang_www algorithm roundrobin:
			#backend sabang_www
			#	balance roundrobin
			#	server srv1 ipsrv1:80
			#	server srv2 ipsrv2:80
		- configure backend sabang_www algorithm roundrobin:
			#backend sabang_user
			#	balance source
			#	server srv1 ipsrv1:80
			#	server srv2 ipsrv2:80
		- configure frontend for acl spesified user:
			#frontend http_front
			#	bind *:80
			#	acl www hdr_end(host) -i www.sabang.net	->jadi ketika ada yang mengakses subdo www.sabang.net, acl www akan di eksekusi
			#	use_backend sabang_www if www			->nah jadi script diatas akan berdampak kesini jika acl www yang digunakan maka load balance haproxy akan menggunakan backend sabang_www
			cara buat acl dan usebackend 100:
			#nano seratusacl.sh
			#for ((i=0;i<100;i++))
			#do
			#echo -e -r "\tacl user$i hdr_end(host) -i user$i.public.net\n\tuse_backend sabang_user if user$i" >> /etc/haproxy/haproxy.cfg
			#done
			simpan dan keluar, jalankan:
			#bash seratusacl.sh
			#/etc/init.d/haproxy restart
	- Configure keepalived:
		- install keepalived:
			#apt-get install keepalived
		- configure keepalived srv1:
			#nano /etc/keepalived/keepalived.conf
			tambahkan
			#vrrp_instance srv1 {
			#	state MASTER
			#	interface ens33
			#	virtual_router_id 205
			#	unicast_peer{
			#		ipsrv2
			#	}
			#	virtual_ipaddress{
			#		virtual ip terserah
			#	}
			#}
			simpan dan keluar
		- configure keepalived srv2:
			#nano /etc/keepalived/keepalived.conf
			tambahkan
			#vrrp_instance srv2 {
			#	state BACKUP
			#	interface ens33
			#	virtual_router_id 205
			#	unicast_peer{
			#		ipsrv1
			#	}
			#	virtual_ipaddress{
			#		virtual ip terserah
			#	}
			#}
			simpan dan keluar
			jangan lupa konfigurasi resolv dns menggunakan virtual ip
	- Configure ISCSI server/target:
		- iscsi digunakan untuk berbagi drive penyimpanan internet seakan akan kita memiliki satu/lebih hdd/penyimpanan tambahan
		- iscsi target adalah server yang menyediakan drive penyimpanan jaringan
		- iscsi initiator adalah client yang memnggunakan drive penyimpanan jaringan
		- iscsi target debian configuration:
			#pvcreate /dev/sd{b,c,sampai selesai sesuai kebutuhan}						
			#vgcreate nama_group_volume_terserah /dev/sd{b,c,sampai selesai sama seperti diatas}	-> membuat group
			#lvcreate -l 100#FREE -n nama_logikal_volume_terserah nama_group_volume
			
			#nano /etc/tgt/targets.conf
			#<target iqn.2022-05.sabang.net:tgt2>
			#	backing-store /dev/tgt2_iscsi(nama group volume)/lvtgt2_iscsi(nama logikalvolume)
			#</target>
			simpan dan keluar
		-iscsi initiator:
			#apt-get install open-iscsi
			#iscsiadm -m discovery -t sendtargets -p ipiscsitarget -> untuk melihat nama target di ip address target
			#iscsiadm -m node -T iqn.2022-05.sabang.net:tgt2 -l
	- Configure dhcp server:
		-buka file konfigurasi dhcp di /etc/dhcp/dhcpd.conf
		-hapus tanda pagar pada script:
			#subnet 10.10.10.0 netmask 255.255.255.0 { -> sekalian diganti network dan netmask sesuai keperluan ip address
			#	range 10.10.10.2 10.10.10.25; -> range terserah
			#	option domain-name-servers 192.168.1.2, 8.8.8.8; -> untuk dns server yang akan digunakan
			#	option domain-name "www.sabang.net";
			#	option routers 10.10.10.1; -> ini akan digunakan gateway bagi dhcp client
			#	option broadcast-address 10.10.10.255; -> broadcast ip
			#	default-lease-time 600;
			#	max-lease-time 7200;
			#}
		-untuk dhcp static( agar mendapatkan ip yang sama untuk device spesifik), cari script berikut hapus tanda pagar dan ubah sesuai intruksi di bawah:
			#host ubuntu { -> sesuaikan nama host client
			#	hardware ethernet 00:0c:29:3b:f3:22; ->sesuaikan dengan mac address device client
			#	fixed-address 10.10.10.244; - memberikan ip secara static ke dhcp client
			#}
		-simpan dan keluar, lalu restart service isc-dhcp server.